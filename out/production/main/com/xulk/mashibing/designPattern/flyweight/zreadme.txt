

享元模式：

为了避免创建过多的对象，公用部分可以继续公用

string 类用的就是享元模式

相当于池子的原理
把频繁使用或者以后会用到的放到池子里面



享元模式的主要角色有如下。
抽象享元角色:是所有的具体享元类的基类，为具体享元规范需要实现的公共接口，非享元的外部状态以参数的形式通过方法传入。
具体享元角色：实现抽象享元角色中所规定的接口。
非享元角色：是不可以共享的外部状态，它以参数的形式注入具体享元的相关方法中。
享元工厂角色：负责创建和管理享元角色。当客户对象请求一个享元对象时，
             享元工厂检査系统中是否存在符合要求的享元对象，如果存在则提供给客户；如果不存在的话，则创建一个新的享元对象。